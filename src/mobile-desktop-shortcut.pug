extends /layouts/default

block beforehtml
  - var title = '手機桌面捷徑產生器'

block style
  style
    :sass
      [v-cloak]
        display: none
      .favicon
        width: 64px
        height: 64px
        display: block
        margin: 0 auto
        border-radius: 20%
      .label
        font-size: 12px
      .icon-18px
        width: 18px
        height: 18px


block content
  #app.container.text-monospace(v-cloak)
    #tutorial(v-if="~['android', 'ios'].indexOf(page)")
      h1.mt-2.mb-5.text-center 把捷徑加到主畫面
      img.favicon.mb-2(:src="icon")
      .text-center.label.mb-5 {{ label }}
      p 新增步驟：
      ol#android-chrome(v-if="page==='android'")
        li 請使用 Android 的 Chrome 瀏覽器開啟
        li 按一下瀏覽器右上角的「更多」圖示 #[img.icon-18px(src="https://lh3.googleusercontent.com/E2q6Vj9j60Dw0Z6NZFEx5vSB9yoZJp7C8suuvQXVA_2weMCXstGD7JEvNrzX3wuQrPtL=w18-h18")]
        li 按一下「加到主畫面」
      ol#ios-safari(v-else="page==='ios'")
        li 請使用 iOS 的 Safari 瀏覽器開啟
        li 按一下下方工具列的「分享」按鈕 #[img.icon-18px(src="https://help.apple.com/assets/5E191630680CE2E07445B58A/5E191634680CE2E07445B591/zh_TW/27e42e6f0cf55937a03d7be3b912b6fa.png")]
        li 按一下「加入主畫面螢幕」
    #generate.text-monospace(v-else)
      h2.my-2.text-center= title
      .form-group.my-2
        label(for="i-icon") 圖示
        input#i-icon.form-control.form-control-sm(type="url", name="icon", v-model="icon")
        small#help-icon.form-text.text-muted 請填寫捷徑圖示。
      .form-group.my-2
        label(for="i-label") 名稱
        input#i-label.form-control.form-control-sm(type="text", name="label", v-model="label")
        small#help-label.form-text.text-muted 請填寫捷徑名稱。
      .form-group.my-2
        label(for="i-link") 網址
        input#i-link.form-control.form-control-sm(type="url", name="link", v-model="link")
        small#help-label.form-text.text-muted 請填寫捷徑網址。
      .form-group.my-2
        label(for="i-result") 結果
        textarea#brwoser.form-control.form-control-sm(style="height: 150px", :value="shortcut", ref="result", readonly)
        small#help-label.form-text.text-muted 請複製此網址，然後在 LINE 中傳給使用者。
      button.btn.btn-success.my-2.mr-2(@click="btnCopy") 複製
      a.btn.btn-primary.my-2.mr-2(:href="shortcut", target="_blank") 測試

block script
  script(src="https://cdn.jsdelivr.net/npm/crypto-js@4/crypto-js.min.js")
  script(src="https://cdn.jsdelivr.net/npm/moment@2/moment.min.js")
  script(src="https://cdn.jsdelivr.net/npm/qrcode@1/build/qrcode.min.js")
  script(src="https://cdn.jsdelivr.net/npm/ua-parser-js@0/dist/ua-parser.min.js")
  script.
    /* global UAParser */
    const vm = new Vue({ // eslint-disable-line
      el: '#app',
      data: {
        icon: 'https://obs.line-scdn.net/0hSG8QEK4LDGgFKCflNDtzPyR1Bwo2ShJjJ05ECiIvUFkrHE5QaUwQXnUqUVsgGx5uP0tHWU4oWg0pG0s4OwtCXSMvVVoqHQ/f256x256',
        label: 'YouBike Today',
        link: 'https://line.me/R/ti/p/@kadacha',
        page: '',
      },
      async mounted () {
        this.init()
      },
      computed: {
        shortcut () {
          if (!this.fnIsValid(this)) return '#'
          const url = new URL('?', location)
          url.searchParams.set('icon', this.icon)
          url.searchParams.set('label', this.label)
          url.searchParams.set('link', this.link)
          url.searchParams.set('openExternalBrowser', 1) // for LINE
          return url.href
        },
        browser () {
          const parser = new UAParser()
          const browser = parser.getResult()
          delete browser.ua
          return browser
        },
      },
      methods: {
        async init () {
          // 讀取網址上的參數
          const params = {
            icon: this.param('icon'),
            label: this.param('label'),
            link: this.param('link'),
          }
          console.log(params)
          if (this.fnIsValid(params)) {
            // 設定 this
            _.each(params, (v, k) => { this[k] = v })
            // 設定 url, title, icon
            this.setIcon('shortcut icon', params.icon)
            this.setIcon('apple-touch-icon', params.icon)
            this.setLabel(params.label)
            this.setLink(params.link)
            // 判斷作業系統及瀏覽器
            this.page = _.toLower(this.browser.os.name)
          } else this.page = 'generate'
        },
        fnIsValid (params) {
          return params.icon && params.label && params.link
        },
        param (key) {
          const url = new URL(location)
          return url.searchParams.get(key)
        },
        setIcon (rel, icon) {
          const dom = document.querySelector(`link[rel='${rel}']`) || document.createElement('link')
          dom.rel = rel
          dom.href = icon
          document.getElementsByTagName('head')[0].appendChild(dom)
        },
        setLabel (label) {
          document.title = label
        },
        setLink (link) {
          const url = new URL('mobile-desktop-shortcut-redirect.html', location)
          url.searchParams.set('link', link)
          history.replaceState(null, '', url.href)
        },
        async btnCopy () {
          const copyText = this.$refs.result
          copyText.select()
          copyText.setSelectionRange(0, 99999) // For mobile devices
          document.execCommand('copy')
          await Swal.fire({
            icon: 'success',
            title: '複製成功',
          })
        },
      },
    })